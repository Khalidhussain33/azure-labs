{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmAdminUsername": {
            "type": "string",
            "metadata": {
                "description": "Administrator name for VMs that are created"
            }
        },
        "vmAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the VMs that are created"
            }
        },
        "vmSku": {
            "type": "string",
            "metadata": {
                "description": "The SKU of VM to deploy"
            },
            "defaultValue": "Standard_DS2_v2"
        },
        "tags": {
            "type": "object",
            "metadata": {
                "description": "The tags that wil be associated to the resources"
            },
            "defaultValue": {
                "environment": "lab"
            }
        },
        "hubVnetName": {
            "type": "string",
            "metadata": {
                "description": "The name assigned to the hub Virtual Network"
            },
            "defaultValue": "vnet-hub"
        },
        "spokeVnetName": {
            "type": "string",
            "metadata": {
                "description": "The name assigned to the spoke Virtual Networks"
            },
            "defaultValue": "vnet-spoke"
        },
        "hubCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR block assigned to the hub Virtual Network"
            },
            "defaultValue": "10.0.0.0/16"
        },
        "spokeCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR block assigned to the spoke Virtual Network"
            },
            "defaultValue": "10.1.0.0/16"
        },
        "hubGatewaySubnetCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR block assigned to the hub Gateway subnet"
            },
            "defaultValue": "10.0.0.0/24"
        },
        "hubBastionSubnetCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR block assigned to the hub Bastion subnet"
            },
            "defaultValue": "10.0.1.0/24"
        },
        "hubPrimarySubnetCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR block assigned to the hub primary subnet"
            },
            "defaultValue": "10.0.2.0/24"
        },
        "spokePrimarySubnetCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR block assigned to the spoke application subnet"
            },
            "defaultValue": "10.1.0.0/24"
        },
        "primarySubnetName": {
            "type": "string",
            "metadata": {
                "description": "The name assigned to the primary subnet in the hub and on-premises Virtual Networks"
            },
            "defaultValue": "snet-pri"
        },
        "bastionPublicIpName": {
            "type": "string",
            "metadata": {
                "description": "The name assigned to the Public IP used by Azure Bastion"
            },
            "defaultValue": "pip-bastion"
        },
        "bastionName": {
            "type": "string",
            "metadata": {
                "description": "The name assigned to the instance of Azure Bastion"
            },
            "defaultValue": "bstss"
        },
        "spokeRouteTable": {
            "type": "string",
            "metadata": {
                "description": "The name assigned to the Route Table assigned to the application and data subnets in the spoke Virtual Network"
            },
            "defaultValue": "rt-spoke"
        },
        "hubVmName": {
            "type": "string",
            "metadata": {
                "description": "The name assigned to the VM in the primary subnet in the hub VNet"
            },
            "defaultValue": "vmhp01"
        },
        "spokeVmName": {
            "type": "string",
            "metadata": {
                "description": "The naming prefix assigned to the VMs in the spokes VNets"
            },
            "defaultValue": "vmsp0"
        },
        "laRetentionPeriod": {
            "type": "int",
            "metadata": {
                "description": "The retention period for the Log Analytics Workspace"
            },
            "defaultValue": 60
        }
    },
    "variables": {
        "location": "[resourceGroup().location]",
        "networkApiVersion": "2020-04-01",
        "resourceDeploymentsApiVersion": "2020-06-01",
        "insightsApiversion": "2015-11-01-preview",
        "bastionSubnetName": "AzureBastionSubnet",
        "gatewaySubnetName": "GatewaySubnet",
        "hubToSpokePeeringName": "peerhubtospoke",
        "spokeToHubPeeringName": "peerspoketohub",
        "laWorkspaceName": "[concat('la-', uniqueString(resourceGroup().id))]"
    },
    "resources": [
        /* Create hub Virtual Network */
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('hubVnetName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('hubCidr')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('gatewaySubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('hubGatewaySubnetCidr')]"
                        }
                    },
                    {
                        "name": "[variables('bastionSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('hubBastionSubnetCidr')]"
                        }
                    },
                    {
                        "name": "[parameters('primarySubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('hubPrimarySubnetCidr')]"
                        }
                    }
                ],
                "enableDdosProtection": false
            },
            "resources": [
            ]
        },
        /* Create spoke Virtual Network */
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('spokeVnetName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('spokeCidr')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('primarySubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('spokePrimarySubnetCidr')]"
                        }
                    }
                ],
                "enableDdosProtection": false
            },
            "resources": [
            ]
        },
        /* Create a Public IP for the Azure Bastion service hosted in the hub Virtual Network */
        {
            "name": "[parameters('bastionPublicIpName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "publicIpAllocationMethod": "Static"
            },
            "sku": {
                "name": "Standard"
            }
        },
        /* Create a Route Table for the spoke Virtual Networks */
        {
            "name": "[parameters('spokeRouteTable')]",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "routes": [
                ],
                "disableBgpRoutePropagation": "False"
            },
            "resources": [
            ]
        },
        /* Assign Route Table to the appropriate subnet */
        {
            "name": "[concat(parameters('spokeVnetName'), '/', parameters('primarySubnetName'))]",
            "apiVersion": "[variables('networkApiVersion')]",
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('spokeVnetName'))]",
                "[concat('Microsoft.Network/routeTables/', parameters('spokeRouteTable'))]"
            ],
            "properties": {
                "addressPrefix": "[parameters('spokePrimarySubnetCidr')]",
                "routeTable": {
                    "addressPrefix": "[parameters('spokePrimarySubnetCidr')]",
                    "id": "[resourceId('Microsoft.Network/routeTables',parameters('spokeRouteTable'))]"
                }
            }
        },
        /* Create Virtual Network Peering on hub to peer spoke to it */
        {
            "name": "[concat(parameters('hubVnetName'),'/',variables('hubToSpokePeeringName'))]",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('hubVnetName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('spokeVnetName'))]"
            ],
            "properties": {
                "allowVirtualNetworkAccess": "true",
                "allowForwardedTraffic": "true",
                "allowGatewayTransit": "false",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks',parameters('spokeVnetName'))]"
                }
            }
        },
        /* Create Virtual Network Peering on spoke to peer hub to it */
        {
            "name": "[concat(parameters('spokeVnetName'),'/',variables('spokeToHubPeeringName'))]",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('hubVnetName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('spokeVnetName'))]"
            ],
            "properties": {
                "allowVirtualNetworkAccess": "true",
                "allowForwardedTraffic": "true",
                "allowGatewayTransit": "false",
                "useRemoteGateways": "false",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks',parameters('hubVnetName'))]"
                }
            }
        },
        /* Create a Log Analytics Workspace */
        {
            "name": "[variables('laworkspaceName')]",
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "[variables('insightsApiVersion')]",
            "location": "[variables('location')]",
            "properties": {
                "sku": {
                    "name": "PerGB2018"
                },
                "retentionInDays": "[parameters('laRetentionPeriod')]"
            },
            "resources": [
            ]
        },
        /* Deploy a VM into the primary subnet in the hub Virtual Network */
        {
            "name": "[parameters('hubVmName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourceDeploymentsApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('hubVnetName'))]",
                "[concat('Microsoft.OperationalInsights/workspaces/', variables('laWorkspaceName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "tagValues": {
                        "value": "[parameters('tags')]"
                    },
                    "vmName": {
                        "value": "[parameters('hubVmName')]"
                    },
                    "vnetName": {
                        "value": "[parameters('hubVnetName')]"
                    },
                    "subnetName": {
                        "value": "[parameters('primarySubnetName')]"
                    },
                    "virtualMachineSize": {
                        "value": "[parameters('vmSku')]"
                    },
                    "adminUserName": {
                        "value": "[parameters('vmAdminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('vmAdminPassword')]"
                    },
                    "myWorkspaceId": {
                        "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces',variables('laWorkspaceName')), '2015-03-20').customerId]"
                    },
                    "myWorkspaceKey": {
                        "value": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces',variables('laWorkspaceName')), '2015-03-20').primarySharedKey]"
                    }
                },
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/mattfeltonma/arm-templates/master/examples/vm-windows-server-2016/vm-win-2016.json",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        /* Deploy a VM into the primary subnet of the spoke Virtual Network */
        {
            "name": "[parameters('spokeVmName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourceDeploymentsApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('spokeVnetName'))]",
                "[concat(concat('Microsoft.Network/virtualNetworks/', parameters('spokeVnetName')),'/virtualNetworkPeerings/',variables('spokeToHubPeeringName'))]",
                "[concat('Microsoft.Network/virtualNetworks/',parameters('hubVnetName'),'/virtualNetworkPeerings/',variables('hubToSpokePeeringName'))]",
                "[concat('Microsoft.Network/routeTables/',parameters('spokeRouteTable'))]",
                "[concat('Microsoft.OperationalInsights/workspaces/', variables('laWorkspaceName'))]"
                
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "tagValues": {
                        "value": "[parameters('tags')]"
                    },
                    "vmName": {
                        "value": "[parameters('spokeVmName')]"
                    },
                    "vnetName": {
                        "value": "[parameters('spokeVnetName')]"
                    },
                    "subnetName": {
                        "value": "[parameters('primarySubnetName')]"
                    },
                    "virtualMachineSize": {
                        "value": "[parameters('vmSku')]"
                    },
                    "adminUserName": {
                        "value": "[parameters('vmAdminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('vmAdminPassword')]"
                    },
                    "myWorkspaceId": {
                        "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName')), '2015-03-20').customerId]"
                    },
                    "myWorkspaceKey": {
                        "value": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces',variables('laWorkspaceName')), '2015-03-20').primarySharedKey]"
                    }
                },
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/mattfeltonma/arm-templates/master/examples/vm-windows-server-2016/vm-win-2016.json",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        /* Create an Azure Bastion instance in the hub Virtual Network */
        {
            "name": "[parameters('bastionName')]",
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIpAddresses/',parameters('bastionPublicIpName'))]",
                "[concat('Microsoft.Network/virtualNetworks/',parameters('hubVnetName'))]",
                "[concat('Microsoft.Resources/deployments/',parameters('hubVmName'))]"
            ],
            "tags": "[parameters('tags')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "bastionConfig",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('hubVnetName'), variables('bastionSubnetName'))]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', parameters('bastionPublicIpName'))]"
                            },
                            "privateIPAllocationMethod": "Dynamic"
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
        "VmHubVmIp": {
            "type": "string",
            "value": "[reference(parameters('hubVmName')).outputs.vmPrivateIpAddress.value]"
        },
        "VmSpokeVmIp": {
            "type": "string",
            "value": "[reference(parameters('spokeVmName')).outputs.vmPrivateIpAddress.value]"
        }
    }
}
