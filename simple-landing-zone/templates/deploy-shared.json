{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "uniqueData": {
            "type": "string",
            "metadata": {
                "description": "Data used to append to resources to ensure uniqueness"
            },
            "defaultValue": "[substring(newGuid(),0,8)]"
        },
        "adDomainName": {
            "type": "string",
            "metadata": {
                "description": "The domain name assigned to the Active Directory domain"
            },
            "maxLength": 14 
        },
        "adVmIp": {
            "type": "string",
            "metadata": {
                "description": "The IP assigned to the Active Directory domain controller virtual machine"
            }
        },
        "hubBastionSubnetCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the Bastion subnet in the hub"
            }
        },
        "networkWatcherRg": {
            "type": "string",
            "metadata": {
                "description": "The resource group where the Network Watcher instances are stored"
            },
            "defaultValue": "NetworkWatcherRG"
        },
        "sharedVnetCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the Shared Services virtual network"
            }
        },
        "sharedVnetSubnetAdCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the subnet used for Windows Active Directory domain controllers"
            }
        },
        "sharedVnetSubnetInfraCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the subnet used for other infrastructure services such as backup or PKI"
            }
        },
        "tags": {
            "type": "object",
            "metadata": {
                "description": "The tags that wil be associated to the resources"
            },
            "defaultValue": {
                "environment": "lab"
            }
        },
        "vmAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the VMs that are created"
            }
        },
        "vmAdminUsername": {
            "type": "string",
            "metadata": {
                "description": "Administrator name for VMs that are created"
            }
        }
    },
    "variables": {
        "dnsApiVersion": "2018-09-01",
        "laApiVersion": "2015-11-01-preview",
        "networkApiVersion": "2020-04-01",
        "resourcesApiVersion": "2020-06-01",
        "storageApiVersion": "2019-06-01",
        "adNsgFlowLogDeploymentName": "deploy-adflowlog",
        "adNsgName": "[concat('nsg-ad', parameters('uniqueData'))]",
        "blobStorageDnsZoneName": "privatelink.blob.core.windows.net",
        "blobStoragePlLinkName": "[concat(variables('blobStorageDnsZoneName'), '-link')]",
        "adVmDeploymentName": "deploy-ad",
        "adVmName": "vmdc01",
        "fileStorageDnsZoneName": "privatelink.file.core.windows.net",
        "fileStoragePlLinkName": "[concat(variables('fileStorageDnsZoneName'), '-link')]",
        "infraNsgFlowLogDeploymentName": "deploy-infralowlog",
        "infraNsgName": "[concat('nsg-infra', parameters('uniqueData'))]",
        "laWorkspaceName": "[concat('la', parameters('uniqueData'))]",
        "location": "[resourceGroup().location]",
        "logAnalyticsRetention": 30,
        "logStorageAccountName": "[concat('stcent', parameters('uniqueData'))]",
        "nsgDeploymentUri": "[uri(deployment().properties.templateLink.uri, 'deploy-nsg-flow-log.json')]",
        "queueStorageDnsZoneName": "privatelink.queue.core.windows.net",
        "queueStoragePlLinkName": "[concat(variables('queueStorageDnsZoneName'), '-link')]",
        "sharedAdSubnetName": "snet-ad",
        "sharedInfraSvcSubnetName": "snet-infra",
        "sharedSvcRouteTableName": "[concat('rt-shared', parameters('uniqueData'))]",
        "sharedVnetName": "[concat('vnet-shared', parameters('uniqueData'))]",
        "tableStorageDnsZoneName": "privatelink.table.core.windows.net",
        "tableStoragePlLinkName": "[concat(variables('tableStorageDnsZoneName'), '-link')]",
        "vmDeploymentUri": "[uri(deployment().properties.templateLink.uri, 'deploy-windows-dc.json')]",
        "vmSku": "Standard_DS2_v2",
        "vnetStandardDdosProtection": false
    },
    "resources": [
        /* Create Log Analytics Workspace */
        {
            "name": "[variables('laWorkspaceName')]",
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "[variables('laApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "sku": {
                    "name": "PerGB2018"
                },
                "publicNetworkAccessForIngestion": "Disabled",
                "publicNetworkAccessForQuery": "Enabled",
                "retentionInDays": "[variables('logAnalyticsRetention')]"
            }
        },
        /* Create Storage account for NSG Flow Logs */
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "[variables('storageApiVersion')]",
            "name": "[variables('logStorageAccountName')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_RAGRS"
            },
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Deny"
                },
                "supportsHttpsTrafficOnly": true
            }
        },
        /* Create NSG for Infra subnet */
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('infraNsgName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "securityRules": []
            }
        },
        /* Create NSG for AD Subnets */
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('adNsgName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowADWS",
                        "properties": {
                            "description": "Client - Allow AD Web Services",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "9389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowADGlbCat",
                        "properties": {
                            "description": "Client - Allow AD Global Catalog",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3268-3269",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowLdap",
                        "properties": {
                            "description": "Client - Allow AD LDAP",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 102,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowLdapSsl",
                        "properties": {
                            "description": "Client - Allow AD SSL",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "636",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 103,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowRpcMapper",
                        "properties": {
                            "description": "Client - Allow RPC Mapper",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "135",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 104,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowRpcDynamic",
                        "properties": {
                            "description": "Client - Allow RPC dynamic ports",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "49152-65535",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 105,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowSmb",
                        "properties": {
                            "description": "Client - Allow Smb",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "445",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 106,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowDns",
                        "properties": {
                            "description": "Client - Allow Dns",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "53",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 107,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowKerberos",
                        "properties": {
                            "description": "Client - Allow Kerberos",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "88",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 108,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowNtp",
                        "properties": {
                            "description": "Client - Allow NTP",
                            "protocol": "Udp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "123",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 109,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AlllowKerbChgSet",
                        "properties": {
                            "description": "Client - Allow Kerberos Password Set/Change",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "464",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowNetbiosUdp",
                        "properties": {
                            "description": "Client - Allow NETBIOS UDP",
                            "protocol": "Udp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "137-138",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 111,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowNetbiosTcp",
                        "properties": {
                            "description": "Client - Allow NETBIOS TCP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "139",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 112,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowRdp",
                        "properties": {
                            "description": "Allow Rdp",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefixes": [
                                "[parameters('hubBastionSubnetCidr')]"
                            ],
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 113,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "DenyAllInbound",
                        "properties": {
                            "description": "Deny all inbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 1000,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        /* Enable NSG flow log for AD NSG */
        {
            "name": "[variables('adNsgFlowLogDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "resourceGroup": "[parameters('networkWatcherRg')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('adNsgName'))]",
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts',variables('logStorageAccountName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "targetLaWorkspaceResourceId": {
                        "value": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]"
                    },
                    "targetNsgName": {
                        "value": "[variables('adNsgName')]"
                    },
                    "targetNsgResourceId": {
                        "value": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('adNsgName'))]"
                    },
                    "targetStorageResourceId": {
                        "value": "[resourceId('Microsoft.Storage/storageAccounts',variables('logStorageAccountName'))]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('nsgDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        /* Enable NSG flow log for Infra NSG */
        {
            "name": "[variables('infraNsgFlowLogDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "resourceGroup": "[parameters('networkWatcherRg')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('adNsgFlowLogDeploymentName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('infraNsgName'))]",
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts',variables('logStorageAccountName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "targetLaWorkspaceResourceId": {
                        "value": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]"
                    },
                    "targetNsgName": {
                        "value": "[variables('infraNsgName')]"
                    },
                    "targetNsgResourceId": {
                        "value": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('infraNsgName'))]"
                    },
                    "targetStorageResourceId": {
                        "value": "[resourceId('Microsoft.Storage/storageAccounts',variables('logStorageAccountName'))]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('nsgDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        /* Create Route Table for Shared Services subnets */
        {
            "name": "[variables('sharedSvcRouteTableName')]",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/',variables('infraNsgFlowLogDeploymentName'))]"
            ],
            "properties": {
                "routes": [
                ],
                "disableBgpRoutePropagation": "True"
            },
            "resources": [
            ]
        },
        /* Create Virtual Network */
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('sharedVnetName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('infraNsgName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('adNsgName'))]",
                "[resourceId('Microsoft.Network/routeTables', variables('sharedSvcRouteTableName'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('sharedVnetCidr')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('sharedAdSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('sharedVnetSubnetAdCidr')]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables',variables('sharedSvcRouteTableName'))]"
                            },
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('adNsgName'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('sharedInfraSvcSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('sharedVnetSubnetInfraCidr')]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables',variables('sharedSvcRouteTableName'))]"
                            },
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('infraNsgName'))]"
                            }
                        }
                    }
                ],
                "enableDdosProtection": "[variables('vnetStandardDdosProtection')]"
            },
            "resources": [
            ]
        },
        /* Create Private DNS Zones */
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "[variables('blobStorageDnsZoneName')]",
            "location": "global"
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "[variables('fileStorageDnsZoneName')]",
            "location": "global"
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "[variables('tableStorageDnsZoneName')]",
            "location": "global"
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "[variables('queueStorageDnsZoneName')]",
            "location": "global"
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "privatelink.monitor.azure.com",
            "location": "global"
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "privatelink.oms.opinsights.azure.com",
            "location": "global"
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "privatelink.ods.opinsights.azure.com",
            "location": "global"
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "privatelink.agentsvc.azure-automation.net",
            "location": "global"
        },
        /* Create Private DNS Zone Links */
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "[concat(variables('blobStorageDnsZoneName'), '/', variables('blobStoragePlLinkName'))]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones',variables('blobStorageDnsZoneName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('sharedVnetName'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('sharedVnetName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "[concat(variables('fileStorageDnsZoneName'), '/', variables('fileStoragePlLinkName'))]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones',variables('fileStorageDnsZoneName'))]",
                "[concat('Microsoft.Network/privateDnsZones/', variables('blobStorageDnsZoneName'), '/virtualNetworkLinks/', variables('blobStoragePlLinkName'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('sharedVnetName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "[concat(variables('tableStorageDnsZoneName'), '/', variables('tableStoragePlLinkName'))]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones',variables('tableStorageDnsZoneName'))]",
                "[concat('Microsoft.Network/privateDnsZones/', variables('fileStorageDnsZoneName'), '/virtualNetworkLinks/', variables('fileStoragePlLinkName'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('sharedVnetName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "[concat(variables('queueStorageDnsZoneName'), '/', variables('queueStoragePlLinkName'))]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones',variables('queueStorageDnsZoneName'))]",
                "[concat('Microsoft.Network/privateDnsZones/', variables('tableStorageDnsZoneName'), '/virtualNetworkLinks/', variables('tableStoragePlLinkName'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('sharedVnetName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "privatelink.monitor.azure.com/privatelink.monitor.azure.com-link",
            "location": "global",
            "dependsOn": [
                "Microsoft.Network/privateDnsZones/privatelink.monitor.azure.com",
                "[concat('Microsoft.Network/privateDnsZones/', variables('queueStorageDnsZoneName'), '/virtualNetworkLinks/', variables('queueStoragePlLinkName'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('sharedVnetName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "privatelink.oms.opinsights.azure.com/privatelink.oms.opinsights.azure.com-link",
            "location": "global",
            "dependsOn": [
                "Microsoft.Network/privateDnsZones/privatelink.oms.opinsights.azure.com",
                "Microsoft.Network/privateDnsZones/privatelink.monitor.azure.com/virtualNetworkLinks/privatelink.monitor.azure.com-link"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('sharedVnetName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "privatelink.ods.opinsights.azure.com/privatelink.ods.opinsights.azure.com-link",
            "location": "global",
            "dependsOn": [
                "Microsoft.Network/privateDnsZones/privatelink.ods.opinsights.azure.com",
                "Microsoft.Network/privateDnsZones/privatelink.oms.opinsights.azure.com/virtualNetworkLinks/privatelink.oms.opinsights.azure.com-link"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('sharedVnetName'))]"
                }
            }
        },      
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "privatelink.agentsvc.azure-automation.net/privatelink.agentsvc.azure-automation.net-link",
            "location": "global",
            "dependsOn": [
                "Microsoft.Network/privateDnsZones/privatelink.agentsvc.azure-automation.net",
                "Microsoft.Network/privateDnsZones/privatelink.ods.opinsights.azure.com/virtualNetworkLinks/privatelink.ods.opinsights.azure.com-link"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('sharedVnetName'))]"
                }
            }
        },
        /* Deploy Domain Controller */
        {
            "name": "[variables('adVmDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
                "Microsoft.Network/privateDnsZones/privatelink.agentsvc.azure-automation.net/virtualNetworkLinks/privatelink.agentsvc.azure-automation.net-link",
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "adminPassword": {
                        "value": "[parameters('vmAdminPassword')]"
                    },
                    "adminUserName": {
                        "value": "[parameters('vmAdminUsername')]"
                    },
                    "adDomainName": {
                        "value": "[parameters('adDomainName')]"
                    },
                    "dcIpAddress": {
                        "value": "[parameters('adVmIp')]"
                    },
                    "myWorkspaceId": {
                        "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces',variables('laWorkspaceName')), '2015-03-20').customerId]"
                    },
                    "myWorkspaceKey": {
                        "value": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces',variables('laWorkspaceName')), '2015-03-20').primarySharedKey]"
                    },
                    "subnetName": {
                        "value": "[variables('sharedAdSubnetName')]"
                    },
                    "tagValues": {
                        "value": "[parameters('tags')]"
                    },
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "virtualMachineSize": {
                        "value": "[variables('vmSku')]"
                    },
                    "vmName": {
                        "value": "[variables('adVmName')]"
                    },
                    "vnetName": {
                        "value": "[variables('sharedVnetName')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('vmDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        }
    ],
    "outputs": {
        "laWorkspaceId": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces',variables('laWorkspaceName')), '2015-03-20').customerId]"
        },
        "laWorkspaceKey": {
            "type": "string",
            "value": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces',variables('laWorkspaceName')), '2015-03-20').primarySharedKey]"
        },
        "laWorkspaceName": {
            "type": "string",
            "value": "[variables('laWorkspaceName')]"
        },        
        "laWorkspaceResourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]"
        },
        "logStorageName": {
            "type": "string",
            "value": "[variables('logStorageAccountName')]"
        },
        "logStorageResourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('logStorageAccountName'))]"
        },
        "sharedAdNsgResourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('adNsgName'))]"            
        },
        "sharedInfraNsgResourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('infraNsgName'))]"            
        },
        "sharedRouteTableName": {
            "type": "string",
            "value": "[resourceId('Microsoft.Network/virtualNetworks', variables('sharedSvcRouteTableName'))]"
        },
        "sharedSvcRouteTableName": {
            "type": "string",
            "value": "[variables('sharedSvcRouteTableName')]"            
        },
        "sharedSvcRouteTableResourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Network/routeTables', variables('sharedSvcRouteTableName'))]"          
        },
        "sharedVnetName": {
            "type": "string",
            "value": "[resourceId('Microsoft.Network/virtualNetworks', variables('sharedVnetName'))]"
        },
        "sharedVnetResourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Network/virtualNetworks', variables('sharedVnetName'))]"
        }
    }
}
