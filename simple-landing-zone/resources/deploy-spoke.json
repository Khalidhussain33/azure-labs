{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "uniqueData": {
            "type": "string",
            "metadata": {
                "description": "Data used to append to resources to ensure uniqueness"
            },
            "defaultValue": "[substring(newGuid(),0,8)]"
        },
        "firewallIp": {
            "type": "string",
            "metadata": {
                "description": "The ip of the firewall that will be used for next hop in the routing table"
            }
        },
        "hubVnetName": {
            "type": "string",
            "metadata": {
                "description": "The name of the hub virtual network"
            }
        },
        "hubVnetResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "The name of the resource group the hub virtual network exists in"
            },
            "defaultValue": "[resourceGroup().name]"
        },
        "hubVnetSubscriptionId": {
            "type": "string",
            "metadata": {
                "description": "The subscription id of the subscription the hub is stored in"
            },
            "defaultValue": "[subscription().subscriptionId]"
        },
        "laWorkspaceResourceId": {
            "type": "string",
            "metadata": {
                "description": "The Log Analytics Workspace resource id"
            }
        },
        "logStorageAccountResourceId": {
            "type": "string",
            "metadata": {
                "description": "The storage account used for storage of NSG flow logs"
            }
        },
        "networkWatcherRg": {
            "type": "string",
            "metadata": {
                "description": "The resource group where the Network Watcher instances are stored"
            },
            "defaultValue": "NetworkWatcherRG"
        },
        "spokeVnetCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the spoke virtual network"
            }
        },
        "spokeVnetSubnetAppCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the subnet used for the application layer of the workload"
            }
        },
        "spokeVnetSubnetDataCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the subnet used for the data layer of the workload"
            }
        },
        "spokeVnetSubnetSupportCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the subnet used for support services being served up via Private Endpoints"
            }
        },
        "tags": {
            "type": "object",
            "metadata": {
                "description": "The tags that wil be associated to the resources"
            },
            "defaultValue": {
                "environment": "lab"
            }
        }
    },
    "variables": {
        "networkApiVersion": "2020-04-01",
        "resourcesApiVersion": "2020-06-01",
        "appNsgFlowLogDeploymentName": "deploy-appflowlog",
        "appNsgName": "[concat('nsg-app', parameters('uniqueData'))]",
        "dataNsgFlowLogDeploymentName": "deploy-dataflowlog",
        "dataNsgName": "[concat('nsg-data', parameters('uniqueData'))]",
        "hubPeeringDeploymentName": "deploy-peering",
        "location": "[resourceGroup().location]",
        "peeringHubToSpokeName": "peerhubtospoke",
        "peeringSpokeToHubName": "peerspoketohub",
        "spokeAppSubnetName": "snet-app",
        "spokeDataSubnetName": "snet-data",
        "spokeSupportSvcSubnetName": "snet-support",
        "spokeRouteTableName": "[concat('rt-spoke', parameters('uniqueData'))]",
        "spokeVnetName": "[concat('vnet-spoke', parameters('uniqueData'))]",
        "supportNsgFlowLogDeploymentName": "deploy-supportflowlog",
        "supportNsgName": "[concat('nsg-support', parameters('uniqueData'))]",
        "vnetStandardDdosProtection": false
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('appNsgName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "securityRules": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('dataNsgName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "securityRules": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('supportNsgName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "securityRules": []
            }
        },
        {
            "name": "[variables('appNsgFlowLogDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "resourceGroup": "[parameters('networkWatcherRg')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('appNsgName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "targetLaWorkspaceResourceId": {
                        "value": "[parameters('laWorkspaceResourceId')]"
                    },
                    "targetNsgName": {
                        "value": "[variables('appNsgName')]"
                    },
                    "targetNsgResourceId": {
                        "value": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('appNsgName'))]"
                    },
                    "targetStorageResourceId": {
                        "value": "[parameters('logStorageAccountResourceId')]"
                    }
                },
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/mattfeltonma/azure-labs/master/simple-landing-zone/resources/deploy-nsg-flow-log.json",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('dataNsgFlowLogDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "resourceGroup": "[parameters('networkWatcherRg')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('dataNsgName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('appNsgFlowLogDeploymentName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "targetLaWorkspaceResourceId": {
                        "value": "[parameters('laWorkspaceResourceId')]"
                    },
                    "targetNsgName": {
                        "value": "[variables('dataNsgName')]"
                    },
                    "targetNsgResourceId": {
                        "value": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('dataNsgName'))]"
                    },
                    "targetStorageResourceId": {
                        "value": "[parameters('logStorageAccountResourceId')]"
                    }
                },
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/mattfeltonma/azure-labs/master/simple-landing-zone/resources/deploy-nsg-flow-log.json",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('supportNsgFlowLogDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "resourceGroup": "[parameters('networkWatcherRg')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('supportNsgName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('dataNsgFlowLogDeploymentName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "targetLaWorkspaceResourceId": {
                        "value": "[parameters('laWorkspaceResourceId')]"
                    },
                    "targetNsgName": {
                        "value": "[variables('supportNsgName')]"
                    },
                    "targetNsgResourceId": {
                        "value": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('supportNsgName'))]"
                    },
                    "targetStorageResourceId": {
                        "value": "[parameters('logStorageAccountResourceId')]"
                    }
                },
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/mattfeltonma/azure-labs/master/simple-landing-zone/resources/deploy-nsg-flow-log.json",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('spokeRouteTableName')]",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/',variables('supportNsgFlowLogDeploymentName'))]"
            ],
            "properties": {
                "routes": [
                    {
                        "name": "udr-default",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('firewallIp')]"
                        }
                    }
                ],
                "disableBgpRoutePropagation": "False"
            },
            "resources": [
            ]
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('spokeVnetName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('appNsgName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('dataNsgName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('supportNsgName'))]",
                "[resourceId('Microsoft.Network/routeTables', variables('spokeRouteTableName'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('spokeVnetCidr')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('spokeAppSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('spokeVnetSubnetAppCidr')]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables',variables('spokeRouteTableName'))]"
                            },
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('appNsgName'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('spokeDataSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('spokeVnetSubnetDataCidr')]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables',variables('spokeRouteTableName'))]"
                            },
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('dataNsgName'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('spokeSupportSvcSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('spokeVnetSubnetSupportCidr')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('supportNsgName'))]"
                            },
                            "privateEndpointNetworkPolicies": "Disabled"
                        }
                    }
                ],
                "enableDdosProtection": "[variables('vnetStandardDdosProtection')]",
                "dhcpOptions": {
                    "dnsServers": [
                        "[parameters('firewallIp')]"
                    ]
                }
            },
            "resources": [
                {
                    "name": "[variables('peeringSpokeToHubName')]",
                    "type": "virtualNetworkPeerings",
                    "apiVersion": "[variables('networkApiVersion')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Network/virtualNetworks/', variables('spokeVnetName'))]"
                    ],
                    "properties": {
                        "allowVirtualNetworkAccess": "true",
                        "allowForwardedTraffic": "true",
                        "allowGatewayTransit": "false",
                        "useRemoteGateways": "false",
                        "remoteVirtualNetwork": {
                            "id": "[resourceId(parameters('hubVnetSubscriptionId'),parameters('hubVnetResourceGroupName'),'Microsoft.Network/virtualNetworks',parameters('hubVnetName'))]"
                        }
                    }
                }
            ]
        },
        {
            "name": "[variables('hubPeeringDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "subscriptionId": "[parameters('hubVnetSubscriptionId')]",
            "resourceGroup": "[parameters('hubVnetResourceGroupName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('spokeVnetName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "name": "[concat(parameters('hubVnetName'),'/',variables('peeringHubToSpokeName'))]",
                            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                            "apiVersion": "[variables('networkApiVersion')]",
                            "location": "[resourceGroup().location]",
                            "properties": {
                                "allowVirtualNetworkAccess": "true",
                                "allowForwardedTraffic": "true",
                                "allowGatewayTransit": "false",
                                "remoteVirtualNetwork": {
                                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('spokeVnetName'))]"
                                }
                            }
                        }
                    ]
                }
            }
        }
    ],
    "outputs": {
    }
}
