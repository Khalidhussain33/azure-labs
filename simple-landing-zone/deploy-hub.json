{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "uniqueData": {
            "type": "string",
            "metadata": {
                "description": "Data used to append to resources to ensure uniqueness"
            },
            "defaultValue": "[substring(newGuid(),0,8)]"
        },
        "tags": {
            "type": "object",
            "metadata": {
                "description": "The tags that wil be associated to the resources"
            },
            "defaultValue": {
                "environment": "lab"
            }
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "The location resources will be deployed to"
            }         
        },
        "hubVnetCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the hub virtual network"
            },
            "defaultValue": {
                "environment": "10.0.0.0/16"
            }
        },
        "hubGatewaySubnetCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the Gateway subnet in the hub virtual network"
            },
            "defaultValue": {
                "environment": "10.0.0.0/27"
            }
        },
        "hubBastionSubnetCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the Bastion subnet in the hub virtual network"
            },
            "defaultValue": {
                "environment": "10.0.1.0/27"
            }
        },
        "hubFwSubnetPayCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the Azure Firewall payload subnet in the hub virtual network"
            },
            "defaultValue": {
                "environment": "10.0.2.0/27"
            }
        },
        "hubCentralSvcSubnetCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the subnet used to store centralized private enpdoint services"
            }
        },
        "sharedVnetCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the Shared Services virtual network"
            },
            "defaultValue": {
                "environment": "10.1.0.0/16"
            }
        },
        "sharedVnetSubnetAdCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the subnet used for Windows Active Directory domain controllers"
            },
            "defaultValue": {
                "environment": "10.1.0.0/24"
            }
        },
        "sharedVnetSubnetSupportCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the subnet used for support services"
            },
            "defaultValue": {
                "environment": "10.1.1.0/24"
            }
        },
        "sharedVnetSubnetPrivCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the subnet used for privileged activities"
            },
            "defaultValue": {
                "environment": "10.1.2.0/24"
            }
        },
        "spokeVnetCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the spoke virtual network.  This is used in the firewall rules."
            },
            "defaultValue": {
                "environment": "10.2.0.0/16"
            }
        }
    },
    "variables": {
        "logAnalyticsRetention": 30,
        "vnetStandardDdosProtection": false,
        "hubVnetName": "[concat('vnet-hub', parameters('uniqueData'))]",
        "gatewaySubnetName": "GatewaySubnet",
        "bastionSubnetName": "AzureBastionSubnet",
        "fwPayloadSubnetName": "AzureFirewallSubnet",
        "networkWatcherName": "[concat('NetworkWatcher_', parameters('location'))]",
        "centralSvcSubnetName": "snet-central",
        "bastionPublicIpName": "[concat('pip-bst', parameters('uniqueData'))]",
        "bastionName": "[concat('bst', parameters('uniqueData'))]",
        "firewallPublicIpName": "[concat('pip-fw', parameters('uniqueData'))]",
        "firewallName": "[concat('fw', parameters('uniqueData'))]",
        "laWorkspaceName": "[concat('la', parameters('uniqueData'))]",
        "bastionNsgName": "[concat('nsg-bst', parameters('uniqueData'))]",
        "centralSvcNsgName": "[concat('nsg-cent', parameters('uniqueData'))]",
        "bastionNsgFlowLogName": "[concat('bstflowlog')]",
        "centralSvcNsgFlowLogName": "[concat('centsvcflowlog')]",
        "logStorageAccountName": "[concat('stcent', parameters('uniqueData'))]",
        "blobStorageDnsZoneName": "privatelink.blob.core.windows.net",
        "fileStorageDnsZoneName": "privatelink.file.core.windows.net",
        "tableStorageDnsZoneName": "privatelink.table.core.windows.net",
        "queueStorageDnsZoneName": "privatelink.queue.core.windows.net",
        "blobStoragePlLinkName": "[concat(variables('blobStorageDnsZoneName'), '-link')]",
        "fileStoragePlLinkName": "[concat(variables('fileStorageDnsZoneName'), '-link')]",
        "tableStoragePlLinkName": "[concat(variables('tableStorageDnsZoneName'), '-link')]",
        "queueStoragePlLinkName": "[concat(variables('queueStorageDnsZoneName'), '-link')]",
        "deployDnsServerSettings": "deploy-dnsserversettings",
        "deployBlobStPe": "deploy-storageblobprivateendpoint",
        "deployFileStPe": "deploy-storagefileprivateendpoint",
        "deployTableStPe": "deploy-storagetableprivateendpoint",
        "deployQueueStPe": "deploy-storagequeueprivateendpoint",
        "deployLaPe": "deploy-laprivateendpoint",
        "networkApiVersion": "2020-04-01",
        "laApiVersion": "2015-11-01-preview",
        "diagnosticApiVersion": "2017-05-01-preview",
        "dnsApiVersion": "2018-09-01",
        "resourcesApiVersion": "2020-06-01",
        "storageApiVersion": "2019-06-01"
    },
    "resources": [
        /* Create Log Analytics Workspace*/
        {
            "name": "[variables('laWorkspaceName')]",
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "[variables('laApiVersion')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "sku": {
                    "name": "PerGB2018"
                },
                "retentionInDays": "[variables('logAnalyticsRetention')]"
            }
        },
        /* Create Azure Storage Account */
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "[variables('storageApiVersion')]",
            "name": "[variables('logStorageAccountName')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('tags')]",
            "sku": {
                "name": "Standard_RAGRS"
            },
            "properties": {
                "supportsHttpsTrafficOnly": true
            }
        },
        /* Create NSG for Bastion subnet */
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('bastionNsgName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowHttps",
                        "properties": {
                            "description": "Allow incoming HTTPS traffic from Internet",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowControlPlane",
                        "properties": {
                            "description": "Allow control plane traffic",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "GatewayManager",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowHealthProbes",
                        "properties": {
                            "description": "Allows health probes from Azure Load Balancer",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 102,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "DenyAllInbound",
                        "properties": {
                            "description": "Deny all inbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 1000,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        /* Create NSG for Central Private Endpoint Services */
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('centralSvcNsgName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "securityRules": []
            }
        },
        /* Create hub virtual network */
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('hubVnetName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('bastionNsgName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('centralSvcNsgName'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('hubVnetCidr')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('gatewaySubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('hubGatewaySubnetCidr')]"
                        }
                    },
                    {
                        "name": "[variables('bastionSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('hubBastionSubnetCidr')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('bastionNsgName'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('fwPayloadSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('hubFwSubnetPayCidr')]"
                        }
                    },
                    {
                        "name": "[variables('centralSvcSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('hubCentralSvcSubnetCidr')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('centralSvcNsgName'))]"
                            },
                            "privateEndpointNetworkPolicies": "Disabled"
                        }
                    }
                ],
                "enableDdosProtection": "[variables('vnetStandardDdosProtection')]"
            },
            "resources": [
            ]
        },
        /* Create Private DNS Zones */
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "[variables('blobStorageDnsZoneName')]",
            "location": "global"
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "[variables('fileStorageDnsZoneName')]",
            "location": "global"
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "[variables('tableStorageDnsZoneName')]",
            "location": "global"
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "[variables('queueStorageDnsZoneName')]",
            "location": "global"
        },
        /* Link Private DNS Zones */
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "[concat(variables('blobStorageDnsZoneName'), '/', variables('blobStoragePlLinkName'))]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones',variables('blobStorageDnsZoneName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('hubVnetName'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('hubVnetName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "[concat(variables('fileStorageDnsZoneName'), '/', variables('fileStoragePlLinkName'))]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones',variables('fileStorageDnsZoneName'))]",
                "[concat('Microsoft.Network/privateDnsZones/', variables('blobStorageDnsZoneName'), '/virtualNetworkLinks/', variables('blobStoragePlLinkName'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('hubVnetName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "[concat(variables('tableStorageDnsZoneName'), '/', variables('tableStoragePlLinkName'))]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones',variables('tableStorageDnsZoneName'))]",
                "[concat('Microsoft.Network/privateDnsZones/', variables('fileStorageDnsZoneName'), '/virtualNetworkLinks/', variables('fileStoragePlLinkName'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('hubVnetName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "[concat(variables('queueStorageDnsZoneName'), '/', variables('queueStoragePlLinkName'))]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones',variables('queueStorageDnsZoneName'))]",
                "[concat('Microsoft.Network/privateDnsZones/', variables('tableStorageDnsZoneName'), '/virtualNetworkLinks/', variables('tableStoragePlLinkName'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('hubVnetName'))]"
                }
            }
        },
        /* Set DNS server for Vnet */
        {
            "name": "[variables('deployDnsServerSettings')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Network/azureFirewalls/',variables('firewallName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks",
                            "name": "[variables('hubVnetName')]",
                            "apiVersion": "[variables('networkApiVersion')]",
                            "location": "[parameters('location')]",
                            "tags": "[parameters('tags')]",
                            "dependsOn": [
                            ],
                            "properties": {
                                "addressSpace": {
                                    "addressPrefixes": [
                                        "[parameters('hubVnetCidr')]"
                                    ]
                                },
                                "subnets": [
                                    {
                                        "name": "[variables('gatewaySubnetName')]",
                                        "properties": {
                                            "addressPrefix": "[parameters('hubGatewaySubnetCidr')]"
                                        }
                                    },
                                    {
                                        "name": "[variables('bastionSubnetName')]",
                                        "properties": {
                                            "addressPrefix": "[parameters('hubBastionSubnetCidr')]",
                                            "networkSecurityGroup": {
                                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('bastionNsgName'))]"
                                            }
                                        }
                                    },
                                    {
                                        "name": "[variables('fwPayloadSubnetName')]",
                                        "properties": {
                                            "addressPrefix": "[parameters('hubFwSubnetPayCidr')]"
                                        }
                                    },
                                    {
                                        "name": "[variables('centralSvcSubnetName')]",
                                        "properties": {
                                            "addressPrefix": "[parameters('hubCentralSvcSubnetCidr')]",
                                            "networkSecurityGroup": {
                                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('centralSvcNsgName'))]"
                                            },
                                            "privateEndpointNetworkPolicies": "Disabled"
                                        }
                                    }
                                ],
                                "enableDdosProtection": "[variables('vnetStandardDdosProtection')]",
                                "dhcpOptions": {
                                    "dnsServers": [
                                        "[reference(variables('firewallName')).ipConfigurations[0].properties.privateIPAddress]"
                                    ]
                                }
                            },
                            "resources": [
                            ]
                        }
                    ]
                }
            }
        },
        /* Create Private Endpoint for Azure Storage Account for blob */
        {
            "name": "[variables('deployBlobStPe')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/privateDnsZones/',variables('queueStorageDnsZoneName'),'/virtualNetworkLinks/', variables('queueStoragePlLinkName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('deployDnsServerSettings'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "privateEndpointLocation": {
                        "value": "[parameters('location')]"
                    },
                    "privateEndpointVnetName": {
                        "value": "[variables('hubVnetName')]"
                    },
                    "privateEndpointSubnetName": {
                        "value": "[variables('centralSvcSubnetName')]"
                    },
                    "resourceName": {
                        "value": "[variables('logStorageAccountName')]"
                    },
                    "resourceIdentifier": {
                        "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('logStorageAccountName'))]"
                    },
                    "privateDnsZoneName": {
                        "value": "[variables('blobStorageDnsZoneName')]"
                    },
                    "privateEndpointSubResource": {
                        "value": [
                            "blob"
                        ]
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/mattfeltonma/azure-labs/v2/simple-landing-zone/resources/deploy-private-endpoint.json",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        /* Create Private Endpoint for Azure Storage Account for file */
        {
            "name": "[variables('deployFileStPe')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('deployBlobStPe'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "privateEndpointLocation": {
                        "value": "[parameters('location')]"
                    },
                    "privateEndpointVnetName": {
                        "value": "[variables('hubVnetName')]"
                    },
                    "privateEndpointSubnetName": {
                        "value": "[variables('centralSvcSubnetName')]"
                    },
                    "resourceName": {
                        "value": "[variables('logStorageAccountName')]"
                    },
                    "resourceIdentifier": {
                        "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('logStorageAccountName'))]"
                    },
                    "privateDnsZoneName": {
                        "value": "[variables('fileStorageDnsZoneName')]"
                    },
                    "privateEndpointSubResource": {
                        "value": [
                            "file"
                        ]
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/mattfeltonma/azure-labs/v2/simple-landing-zone/resources/deploy-private-endpoint.json",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        /* Create Private Endpoint for Azure Storage Account for table */
        {
            "name": "[variables('deployTableStPe')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('deployFileStPe'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "privateEndpointLocation": {
                        "value": "[parameters('location')]"
                    },
                    "privateEndpointVnetName": {
                        "value": "[variables('hubVnetName')]"
                    },
                    "privateEndpointSubnetName": {
                        "value": "[variables('centralSvcSubnetName')]"
                    },
                    "resourceName": {
                        "value": "[variables('logStorageAccountName')]"
                    },
                    "resourceIdentifier": {
                        "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('logStorageAccountName'))]"
                    },
                    "privateDnsZoneName": {
                        "value": "[variables('tableStorageDnsZoneName')]"
                    },
                    "privateEndpointSubResource": {
                        "value": [
                            "table"
                        ]
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/mattfeltonma/azure-labs/v2/simple-landing-zone/resources/deploy-private-endpoint.json",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        /* Create Private Endpoint for Azure Storage Account for queue */
        {
            "name": "[variables('deployQueueStPe')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('deployTableStPe'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "privateEndpointLocation": {
                        "value": "[parameters('location')]"
                    },
                    "privateEndpointVnetName": {
                        "value": "[variables('hubVnetName')]"
                    },
                    "privateEndpointSubnetName": {
                        "value": "[variables('centralSvcSubnetName')]"
                    },
                    "resourceName": {
                        "value": "[variables('logStorageAccountName')]"
                    },
                    "resourceIdentifier": {
                        "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('logStorageAccountName'))]"
                    },
                    "privateDnsZoneName": {
                        "value": "[variables('queueStorageDnsZoneName')]"
                    },
                    "privateEndpointSubResource": {
                        "value": [
                            "queue"
                        ]
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/mattfeltonma/azure-labs/v2/simple-landing-zone/resources/deploy-private-endpoint.json",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        /* Create Private Endpoint for Log Analytics Workspace */
        {
            "name": "[variables('deployLaPe')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/privateDnsZones/',variables('queueStorageDnsZoneName'),'/virtualNetworkLinks/', variables('queueStoragePlLinkName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "privateEndpointLocation": {
                        "value": "[parameters('location')]"
                    },
                    "privateEndpointVnetName": {
                        "value": "[variables('hubVnetName')]"
                    },
                    "privateEndpointSubnetName": {
                        "value": "[variables('centralSvcSubnetName')]"
                    },
                    "laWorkspaceName": {
                        "value": "[variables('laWorkspaceName')]"
                    },
                    "laWorkspaceResourceId": {
                        "value": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/mattfeltonma/azure-labs/v2/simple-landing-zone/resources/deploy-la-private-endpoint.json",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        /* Enable NSG Flow Logs */
        {
            "name": "[concat(variables('networkWatcherName'),'/', variables('bastionNsgFlowLogName'))]",
            "type": "Microsoft.Network/networkWatchers/FlowLogs/",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[parameters('location')]",
            "properties": {
                "targetResourceId": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('bastionNsgName'))]",
                "storageId": "[resourceId('Microsoft.Storage/storageAccounts', variables('logStorageAccountName'))]",
                "enabled": true,
                "flowAnalyticsConfiguration": {
                    "networkWatcherFlowAnalyticsConfiguration": {
                        "enabled": true,
                        "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]",
                        "trafficAnalyticsInterval": 10
                    }
                },
                "retentionPolicy": {
                    "days": 5,
                    "enabled": true
                },
                "format": {
                    "type": "JSON",
                    "version": 2
                }
            }
        },
        {
            "name": "[concat(variables('networkWatcherName'),'/', variables('centralSvcNsgFlowLogName'))]",
            "type": "Microsoft.Network/networkWatchers/FlowLogs/",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[parameters('location')]",
            "properties": {
                "targetResourceId": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('centralSvcNsgName'))]",
                "storageId": "[resourceId('Microsoft.Storage/storageAccounts', variables('logStorageAccountName'))]",
                "enabled": true,
                "flowAnalyticsConfiguration": {
                    "networkWatcherFlowAnalyticsConfiguration": {
                        "enabled": true,
                        "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]",
                        "trafficAnalyticsInterval": 10
                    }
                },
                "retentionPolicy": {
                    "days": 5,
                    "enabled": true
                },
                "format": {
                    "type": "JSON",
                    "version": 2
                }
            }
        },
        /* Create Public IPs for Azure Bastion and Azure Firewall */
        {
            "name": "[variables('bastionPublicIpName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "publicIpAllocationMethod": "Static"
            },
            "sku": {
                "name": "Standard"
            }
        },
        {
            "name": "[variables('firewallPublicIpName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "publicIpAllocationMethod": "Static"
            },
            "sku": {
                "name": "Standard"
            }
        },
        /* Create Azure Firewall instance and diagnostic settings */
        {
            "name": "[variables('firewallName')]",
            "type": "Microsoft.Network/azureFirewalls",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIpAddresses', variables('firewallPublicIpName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('hubVnetName'))]",
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]"
            ],
            "zones": [
                "1"
            ],
            "properties": {
                "networkRuleCollections": [
                    {
                        "name": "AllowVmRequired",
                        "properties": {
                            "priority": 100,
                            "action": {
                                "type": "Allow"
                            },
                            "rules": [
                                {
                                    "name": "AllowKMSActivation",
                                    "description": "Allows VM acess to KMS servers",
                                    "protocols": [
                                        "TCP"
                                    ],
                                    "sourceAddresses": [
                                        "[parameters('sharedVnetCidr')]",
                                        "[parameters('spokeVnetCidr')]"
                                    ],
                                    "destinationFqdns": [
                                        "kms.core.windows.net"
                                    ],
                                    "destinationPorts": [
                                        "1688"
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "AllowAdClient",
                        "properties": {
                            "priority": 101,
                            "action": {
                                "type": "Allow"
                            },
                            "rules": [
                                {
                                    "name": "AllowADWS",
                                    "description": "Allow AD Web Services",
                                    "protocols": [
                                        "TCP"
                                    ],
                                    "sourceAddresses": [
                                        "[parameters('spokeVnetCidr')]"
                                    ],
                                    "destinationAddresses": [
                                        "[parameters('sharedVnetSubnetAdCidr')]"
                                    ],
                                    "destinationPorts": [
                                        "9389"
                                    ]
                                },
                                {
                                    "name": "AllowADGlbCat",
                                    "description": "Allow AD Global Catalogs",
                                    "protocols": [
                                        "TCP"
                                    ],
                                    "sourceAddresses": [
                                        "[parameters('spokeVnetCidr')]"
                                    ],
                                    "destinationAddresses": [
                                        "[parameters('sharedVnetSubnetAdCidr')]"
                                    ],
                                    "destinationPorts": [
                                        "3268-3269"
                                    ]
                                },
                                {
                                    "name": "AllowLdap",
                                    "description": "Client - Allow AD LDAP",
                                    "protocols": [
                                        "TCP",
                                        "UDP"
                                    ],
                                    "sourceAddresses": [
                                        "[parameters('spokeVnetCidr')]"
                                    ],
                                    "destinationAddresses": [
                                        "[parameters('sharedVnetSubnetAdCidr')]"
                                    ],
                                    "destinationPorts": [
                                        "389"
                                    ]
                                },
                                {
                                    "name": "AllowLdapSsl",
                                    "description": "Allow AD SSL",
                                    "protocols": [
                                        "TCP"
                                    ],
                                    "sourceAddresses": [
                                        "[parameters('spokeVnetCidr')]"
                                    ],
                                    "destinationAddresses": [
                                        "[parameters('sharedVnetSubnetAdCidr')]"
                                    ],
                                    "destinationPorts": [
                                        "636"
                                    ]
                                },
                                {
                                    "name": "AllowRpcMapper",
                                    "description": "Allow RPC Mapper",
                                    "protocols": [
                                        "TCP"
                                    ],
                                    "sourceAddresses": [
                                        "[parameters('spokeVnetCidr')]"
                                    ],
                                    "destinationAddresses": [
                                        "[parameters('sharedVnetSubnetAdCidr')]"
                                    ],
                                    "destinationPorts": [
                                        "135"
                                    ]
                                },
                                {
                                    "name": "AllowRpcDynamic",
                                    "description": "Allow RPC dynamic ports",
                                    "protocols": [
                                        "TCP"
                                    ],
                                    "sourceAddresses": [
                                        "[parameters('spokeVnetCidr')]"
                                    ],
                                    "destinationAddresses": [
                                        "[parameters('sharedVnetSubnetAdCidr')]"
                                    ],
                                    "destinationPorts": [
                                        "49152-65535"
                                    ]
                                },
                                {
                                    "name": "AllowSmb",
                                    "description": "Allow Smb",
                                    "protocols": [
                                        "TCP"
                                    ],
                                    "sourceAddresses": [
                                        "[parameters('spokeVnetCidr')]"
                                    ],
                                    "destinationAddresses": [
                                        "[parameters('sharedVnetSubnetAdCidr')]"
                                    ],
                                    "destinationPorts": [
                                        "445"
                                    ]
                                },
                                {
                                    "name": "AllowDns",
                                    "description": "Allow DNS",
                                    "protocols": [
                                        "TCP",
                                        "UDP"
                                    ],
                                    "sourceAddresses": [
                                        "[parameters('spokeVnetCidr')]"
                                    ],
                                    "destinationAddresses": [
                                        "[parameters('sharedVnetSubnetAdCidr')]"
                                    ],
                                    "destinationPorts": [
                                        "53"
                                    ]
                                },
                                {
                                    "name": "AllowKerberos",
                                    "description": "Allow Kerberos",
                                    "protocols": [
                                        "TCP",
                                        "UDP"
                                    ],
                                    "sourceAddresses": [
                                        "[parameters('spokeVnetCidr')]"
                                    ],
                                    "destinationAddresses": [
                                        "[parameters('sharedVnetSubnetAdCidr')]"
                                    ],
                                    "destinationPorts": [
                                        "88"
                                    ]
                                },
                                {
                                    "name": "AllowNtp",
                                    "description": "Allow Ntp",
                                    "protocols": [
                                        "UDP"
                                    ],
                                    "sourceAddresses": [
                                        "[parameters('spokeVnetCidr')]"
                                    ],
                                    "destinationAddresses": [
                                        "[parameters('sharedVnetSubnetAdCidr')]"
                                    ],
                                    "destinationPorts": [
                                        "123"
                                    ]
                                },
                                {
                                    "name": "AllowKerbChgSet",
                                    "description": "Allow Kerberos Password Set/Change",
                                    "protocols": [
                                        "TCP",
                                        "UDP"
                                    ],
                                    "sourceAddresses": [
                                        "[parameters('spokeVnetCidr')]"
                                    ],
                                    "destinationAddresses": [
                                        "[parameters('sharedVnetSubnetAdCidr')]"
                                    ],
                                    "destinationPorts": [
                                        "464"
                                    ]
                                },
                                {
                                    "name": "AllowNetbiosUdp",
                                    "description": "Allow NETBIOS UDP",
                                    "protocols": [
                                        "UDP"
                                    ],
                                    "sourceAddresses": [
                                        "[parameters('spokeVnetCidr')]"
                                    ],
                                    "destinationAddresses": [
                                        "[parameters('sharedVnetSubnetAdCidr')]"
                                    ],
                                    "destinationPorts": [
                                        "137-138"
                                    ]
                                },
                                {
                                    "name": "AllowNetbiosTcp",
                                    "description": "Allow NETBIOS TCP",
                                    "protocols": [
                                        "TCP"
                                    ],
                                    "sourceAddresses": [
                                        "[parameters('spokeVnetCidr')]"
                                    ],
                                    "destinationAddresses": [
                                        "[parameters('sharedVnetSubnetAdCidr')]"
                                    ],
                                    "destinationPorts": [
                                        "139"
                                    ]
                                }
                            ]
                        }
                    }

                ],
                "applicationRuleCollections": [
                ],
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('hubVnetName'), variables('fwPayloadSubnetName'))]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('firewallPublicIpName'))]"
                            }
                        }
                    }
                ],
                "threatIntelMode": "Alert",
                "sku": {
                    "name": "AZFW_VNet",
                    "tier": "Standard"
                },
                "additionalProperties": {
                    "Network.DNS.EnableProxy": "true"
                }
            }
        },
        {
            "name": "[concat(variables('firewallName'),'/microsoft.insights/diag')]",
            "type": "Microsoft.Network/azureFirewalls/providers/diagnosticSettings",
            "apiVersion": "[variables('diagnosticApiVersion')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[concat('Microsoft.Network/azureFirewalls/',variables('firewallName'))]"
            ],
            "properties": {
                "name": "SendToWorkspace",
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces',variables('laWorkspaceName'))]",
                "logs": [
                    {
                        "category": "AzureFirewallApplicationRule",
                        "enabled": true
                    },
                    {
                        "category": "AzureFirewallNetworkRule",
                        "enabled": true
                    },
                    {
                        "category": "AzureFirewallDnsProxy",
                        "enabled": true
                    }
                ],
                "metrics": [
                    {
                        "category": "AllMetrics",
                        "enabled": true
                    }
                ]
            },
            "resources": [
            ]
        },
        /* Deploy Azure Bastion instance */
        {
            "name": "[variables('bastionName')]",
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIpAddresses', variables('bastionPublicIpName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('hubVnetName'))]"
            ],
            "tags": "[parameters('tags')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "bastionConfig",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('hubVnetName'), variables('bastionSubnetName'))]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('bastionPublicIpName'))]"
                            },
                            "privateIPAllocationMethod": "Dynamic"
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
        "firewallIp": {
            "type": "string",
            "value": "[reference(variables('firewallName')).ipConfigurations[0].properties.privateIPAddress]"
        },
        "hubVnetResourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Network/virtualNetworks', variables('hubVnetName'))]"
        }
    }
}
