{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "uniqueData": {
            "type": "string",
            "metadata": {
                "description": "Data used to append to resources to ensure uniqueness"
            },
            "defaultValue": "[substring(newGuid(),0,8)]"
        },
        "vmAdminUsername": {
            "type": "string",
            "metadata": {
                "description": "Administrator name for VMs that are created"
            }
        },
        "vmAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the VMs that are created"
            }
        },
        "tags": {
            "type": "object",
            "metadata": {
                "description": "The tags that wil be associated to the resources"
            },
            "defaultValue": {
                "environment": "lab"
            }
        },
        "sharedVnetCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the Shared Services virtual network"
            }
        },
        "sharedVnetSubnetAdCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the subnet used for Windows Active Directory domain controllers"
            }
        },
        "sharedVnetSubnetSupportCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the subnet used for support services"
            }
        },
        "sharedVnetSubnetPrivCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the subnet used for privileged activities"
            }
        },
        "hubVnetName": {
            "type": "string",
            "metadata": {
                "description": "The name of the hub virtual network"
            }
        },
        "hubVnetResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "The name of the resource group the hub virtual network exists in"
            },
            "defaultValue": "[resourceGroup().name]"
        },
        "hubVnetSubscriptionId": {
            "type": "string",
            "metadata": {
                "description": "The subscription id of the subscription the hub is stored in"
            },
            "defaultValue": "[subscription().subscriptionId]"
        },
        "hubBastionSubnetCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the Bastion subnet in the hub"
            }
        },
        "laWorkspaceId": {
            "type": "string",
            "metadata": {
                "description": "The workspace id of the central log analytics workspace"
            }
        },
        "laWorkspaceKey": {
            "type": "string",
            "metadata": {
                "description": "The workspace key of the central log analytics workspace"
            }
        },
        "logStorageAccountResourceId": {
            "type": "string",
            "metadata": {
                "description": "The storage account used for storage of NSG flow logs"
            }
        },
        "firewallIp": {
            "type": "string",
            "metadata": {
                "description": "The ip of the firewall that will be used for next hop in the routing table"
            }
        },
        "networkWatcherRg": {
            "type": "string",
            "metadata": {
                "description": "The resource group where the Network Watcher instances are stored"
            },
            "defaultValue": "NetworkWatcherRG"
        }
    },
    "variables": {
        "networkApiVersion": "2020-04-01",
        "resourcesApiVersion": "2020-06-01",
        "adNsgFlowLogDeploymentName": "deploy-adflowlog",
        "adNsgName": "[concat('nsg-ad', parameters('uniqueData'))]",
        "hubPeeringDeploymentName": "deploy-peering",
        "location": "[resourceGroup().location]",
        "peeringHubToSharedName": "peerhubtoshared",
        "peeringSharedToHubName": "peersharedtohub",
        "privNsgFlowLogDeploymentName": "deloy-privflowlog",
        "privNsgName": "[concat('nsg-priv', parameters('uniqueData'))]",
        "privVmDeploymentName": "deploy-privm",
        "privVmName": "[concat('vm-priv',parameters('uniqueData'))]",
        "sharedAdSubnetName": "snet-ad",
        "sharedPrivSubnetName": "snet-priv",
        "sharedSupportSvcSubnetName": "snet-support",
        "sharedSvcRouteTableName": "[concat('rt-shared', parameters('uniqueData'))]",
        "sharedVnetName": "[concat('vnet-shared', parameters('uniqueData'))]",
        "supportNsgFlowLogDeploymentName": "deploy-supportflowlog",
        "supportNsgName": "[concat('nsg-support', parameters('uniqueData'))]",
        "vmSku": "Standard_DS2_v2",
        "vnetStandardDdosProtection": false
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('supportNsgName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "securityRules": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('adNsgName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowADWS",
                        "properties": {
                            "description": "Client - Allow AD Web Services",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "9389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowADGlbCat",
                        "properties": {
                            "description": "Client - Allow AD Global Catalog",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3268-3269",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowLdap",
                        "properties": {
                            "description": "Client - Allow AD LDAP",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 102,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowLdapSsl",
                        "properties": {
                            "description": "Client - Allow AD SSL",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "636",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 103,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowRpcMapper",
                        "properties": {
                            "description": "Client - Allow RPC Mapper",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "135",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 104,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowRpcDynamic",
                        "properties": {
                            "description": "Client - Allow RPC dynamic ports",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "49152-65535",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 105,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowSmb",
                        "properties": {
                            "description": "Client - Allow Smb",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "445",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 106,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowDns",
                        "properties": {
                            "description": "Client - Allow Dns",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "53",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 107,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowKerberos",
                        "properties": {
                            "description": "Client - Allow Kerberos",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "88",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 108,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowNtp",
                        "properties": {
                            "description": "Client - Allow NTP",
                            "protocol": "Udp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "123",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 109,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AlllowKerbChgSet",
                        "properties": {
                            "description": "Client - Allow Kerberos Password Set/Change",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "464",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowNetbiosUdp",
                        "properties": {
                            "description": "Client - Allow NETBIOS UDP",
                            "protocol": "Udp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "137-138",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 111,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowNetbiosTcp",
                        "properties": {
                            "description": "Client - Allow NETBIOS TCP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "139",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 112,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowRdp",
                        "properties": {
                            "description": "Allow Rdp",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefixes": [
                                "[parameters('sharedVnetSubnetPrivCidr')]",
                                "[parameters('hubBastionSubnetCidr')]"
                            ],
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 113,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "DenyAllInbound",
                        "properties": {
                            "description": "Deny all inbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 1000,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('privNsgName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowRdp",
                        "properties": {
                            "description": "Allow incoming HTTPS traffic from Internet",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "[parameters('hubBastionSubnetCidr')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "DenyAllInbound",
                        "properties": {
                            "description": "Deny all inbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 1000,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('adNsgFlowLogDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "resourceGroup": "[parameters('networkWatcherRg')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('adNsgName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "targetNsgName": {
                        "value": "[variables('adNsgName')]"
                    },
                    "targetNsgResourceId": {
                        "value": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('adNsgName'))]"
                    },
                    "targetStorageResourceId": {
                        "value": "[parameters('logStorageAccountResourceId')]"
                    }
                },
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/mattfeltonma/azure-labs/simple-landing-zone/simple-landing-zone/resources/deploy-nsg-flow-log.json",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('supportNsgFlowLogDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "resourceGroup": "[parameters('networkWatcherRg')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('supportNsgName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('adNsgFlowLogDeploymentName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "targetNsgName": {
                        "value": "[variables('supportNsgName')]"
                    },
                    "targetNsgResourceId": {
                        "value": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('supportNsgName'))]"
                    },
                    "targetStorageResourceId": {
                        "value": "[parameters('logStorageAccountResourceId')]"
                    }
                },
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/mattfeltonma/azure-labs/simple-landing-zone/simple-landing-zone/resources/deploy-nsg-flow-log.json",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('privNsgFlowLogDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "resourceGroup": "[parameters('networkWatcherRg')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('privNsgName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('supportNsgFlowLogDeploymentName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "targetNsgName": {
                        "value": "[variables('privNsgName')]"
                    },
                    "targetNsgResourceId": {
                        "value": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('privNsgName'))]"
                    },
                    "targetStorageResourceId": {
                        "value": "[parameters('logStorageAccountResourceId')]"
                    }
                },
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/mattfeltonma/azure-labs/simple-landing-zone/simple-landing-zone/resources/deploy-nsg-flow-log.json",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('sharedSvcRouteTableName')]",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/',variables('privNsgFlowLogDeploymentName'))]"
            ],
            "properties": {
                "routes": [
                    {
                        "name": "udr-default",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('firewallIp')]"
                        }
                    }
                ],
                "disableBgpRoutePropagation": "False"
            },
            "resources": [
            ]
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('sharedVnetName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('supportNsgName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('adNsgName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('privNsgName'))]",
                "[resourceId('Microsoft.Network/routeTables', variables('sharedSvcRouteTableName'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('sharedVnetCidr')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('sharedAdSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('sharedVnetSubnetAdCidr')]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables',variables('sharedSvcRouteTableName'))]"
                            },
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('adNsgName'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('sharedSupportSvcSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('sharedVnetSubnetSupportCidr')]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables',variables('sharedSvcRouteTableName'))]"
                            },
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('supportNsgName'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('sharedPrivSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('sharedVnetSubnetPrivCidr')]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables',variables('sharedSvcRouteTableName'))]"
                            },
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('privNsgName'))]"
                            }
                        }
                    }
                ],
                "enableDdosProtection": "[variables('vnetStandardDdosProtection')]",
                "dhcpOptions": {
                    "dnsServers": [
                        "[parameters('firewallIp')]"
                    ]
                }
            },
            "resources": [
                {
                    "name": "[variables('peeringSharedToHubName')]",
                    "type": "virtualNetworkPeerings",
                    "apiVersion": "[variables('networkApiVersion')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Network/virtualNetworks/', variables('sharedVnetName'))]"
                    ],
                    "properties": {
                        "allowVirtualNetworkAccess": "true",
                        "allowForwardedTraffic": "true",
                        "allowGatewayTransit": "false",
                        "useRemoteGateways": "false",
                        "remoteVirtualNetwork": {
                            "id": "[resourceId(parameters('hubVnetSubscriptionId'),parameters('hubVnetResourceGroupName'),'Microsoft.Network/virtualNetworks',parameters('hubVnetName'))]"
                        }
                    }
                }
            ]
        },
        {
            "name": "[variables('hubPeeringDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "subscriptionId": "[parameters('hubVnetSubscriptionId')]",
            "resourceGroup": "[parameters('hubVnetResourceGroupName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('sharedVnetName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "name": "[concat(parameters('hubVnetName'),'/',variables('peeringHubToSharedName'))]",
                            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                            "apiVersion": "[variables('networkApiVersion')]",
                            "location": "[resourceGroup().location]",
                            "properties": {
                                "allowVirtualNetworkAccess": "true",
                                "allowForwardedTraffic": "true",
                                "allowGatewayTransit": "false",
                                "remoteVirtualNetwork": {
                                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('sharedVnetName'))]"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "name": "[variables('privVmDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/',variables('hubPeeringDeploymentName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "tagValues": {
                        "value": "[parameters('tags')]"
                    },
                    "vmName": {
                        "value": "[variables('privVmName')]"
                    },
                    "vnetName": {
                        "value": "[variables('sharedVnetName')]"
                    },
                    "subnetName": {
                        "value": "[variables('sharedPrivSubnetName')]"
                    },
                    "virtualMachineSize": {
                        "value": "[variables('vmSku')]"
                    },
                    "adminUserName": {
                        "value": "[parameters('vmAdminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('vmAdminPassword')]"
                    },
                    "myWorkspaceId": {
                        "value": "[parameters('laWorkspaceId')]"
                    },
                    "myWorkspaceKey": {
                        "value": "[parameters('laWorkspaceKey')]"
                    }
                },
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/mattfeltonma/azure-labs/simple-landing-zone/simple-landing-zone/resources/deploy-windows-server-2019.json",
                    "contentVersion": "1.0.0.0"
                }
            }
        }
    ],
    "outputs": {
    }
}
